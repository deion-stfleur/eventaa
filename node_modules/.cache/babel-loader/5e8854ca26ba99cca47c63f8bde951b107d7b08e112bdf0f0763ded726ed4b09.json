{"ast":null,"code":"var _jsxFileName = \"/Users/deionstfleur/Desktop/nba-project/my-react-app/src/Pages/Explore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../src/App.css';\nimport { BrowserRouter as Router, Route, Routes, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Explore = () => {\n  _s();\n  const [createdEvents, setCreatedEvents] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // const fetchCreatedEvents = () => {\n  //     fetch('http://localhost:8000/api/createEvent')\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         // Handle the response from the server if needed\n  //         console.log('Created events fetched successfully:', data);\n\n  //         // Assuming the server response is an array of created events\n  //         setCreatedEvents(data);\n  //       })\n  //       .catch(error => {\n  //         console.error('Error fetching created events:', error);\n  //         setErrorMessage('Error fetching created events. Please try again.');\n  //       });\n  //   };\n\n  const fetchCreatedEvents = () => {\n    axios.get('http://localhost:8000/api/getEvents').then(response => {\n      console.log('Data received:', response.data);\n      setCreatedEvents(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setErrorMessage('Error fetching data. Please try again.');\n    });\n  };\n  useEffect(() => {\n    // Fetch created events when the component mounts\n    fetchCreatedEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: createdEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Event Name: \", event.eventName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Date: \", event.startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End Date: \", event.endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Explore, \"jJk+xggH2/nvaYNsa1MwOU/sabg=\");\n_c = Explore;\nexport default Explore;\nvar _c;\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Link","useLocation","axios","jsxDEV","_jsxDEV","Explore","_s","createdEvents","setCreatedEvents","errorMessage","setErrorMessage","fetchCreatedEvents","get","then","response","console","log","data","catch","error","children","map","event","eventName","fileName","_jsxFileName","lineNumber","columnNumber","startDate","endDate","location","id","_c","$RefreshReg$"],"sources":["/Users/deionstfleur/Desktop/nba-project/my-react-app/src/Pages/Explore.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../../src/App.css'\nimport { BrowserRouter as Router, Route, Routes, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\n\nconst Explore = () => {\n    const [createdEvents, setCreatedEvents] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // const fetchCreatedEvents = () => {\n    //     fetch('http://localhost:8000/api/createEvent')\n    //       .then(response => response.json())\n    //       .then(data => {\n    //         // Handle the response from the server if needed\n    //         console.log('Created events fetched successfully:', data);\n    \n    //         // Assuming the server response is an array of created events\n    //         setCreatedEvents(data);\n    //       })\n    //       .catch(error => {\n    //         console.error('Error fetching created events:', error);\n    //         setErrorMessage('Error fetching created events. Please try again.');\n    //       });\n    //   };\n\n    const fetchCreatedEvents = () => {\n        axios.get('http://localhost:8000/api/getEvents')\n          .then(response => {\n            console.log('Data received:', response.data);\n            setCreatedEvents(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching data:', error);\n            setErrorMessage('Error fetching data. Please try again.');\n          });\n      };\n\n      useEffect(() => {\n        // Fetch created events when the component mounts\n        fetchCreatedEvents();\n      }, []);\n\n    return (\n        <div>\n\n<ul>\n        {createdEvents.map(event => (\n          <li key={event.id}>\n            <p>Event Name: {event.eventName}</p>\n            <p>Start Date: {event.startDate}</p>\n            <p>End Date: {event.endDate}</p>\n            <p>Location: {event.location}</p>\n          </li>\n        ))}\n      </ul>\n        <p>test</p>\n\n        </div>\n    )\n\n};\n\nexport default Explore;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,mBAAmB;AAC1B,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC5F,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC7BT,KAAK,CAACU,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC5CT,gBAAgB,CAACM,QAAQ,CAACG,IAAI,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CT,eAAe,CAAC,wCAAwC,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd;IACAgB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAER,oBACIP,OAAA;IAAAgB,QAAA,gBAERhB,OAAA;MAAAgB,QAAA,EACSb,aAAa,CAACc,GAAG,CAACC,KAAK,iBACtBlB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAAG,cAAY,EAACE,KAAK,CAACC,SAAS;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCvB,OAAA;UAAAgB,QAAA,GAAG,cAAY,EAACE,KAAK,CAACM,SAAS;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCvB,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACE,KAAK,CAACO,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCvB,OAAA;UAAAgB,QAAA,GAAG,YAAU,EAACE,KAAK,CAACQ,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ1BL,KAAK,CAACS,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACHvB,OAAA;MAAAgB,QAAA,EAAG;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAGd,CAAC;AAACrB,EAAA,CAvDID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAyDb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}